[gd_scene load_steps=5 format=1]

[ext_resource path="res://assets/Graphic/Monster/Monster29.png" type="Texture" id=1]

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 10, 10 )

[sub_resource type="GDScript" id=2]

script/source = "extends KinematicBody2D

export(int) var damage = 40
export var velocity = Vector2()
export(int) var speed = 100

#export(float) var directionX = 0
#export(float) var directionY = 1
export var direction = Vector2()
onready var sprite = get_node(\"Goblin4\")
var step = 32
var posOld = Vector2()

func _ready():
	randomize()
	#directionX = random_direction()
	#directionY = random_direction()
	direction = random_directionVector()
	var pos = realPositionCentered(get_pos())
	set_pos(pos)
	set_fixed_process(true)


func _on_Area2D_body_enter( body ):
	print(\"start body_collision:\")
	print(\"%s\" % get_pos())
	if(body.is_in_group(\"hero\")):
		print(\"in if body entered\")
		body.getDamage(damage)
		queue_free()

func _fixed_process(delta):
	var number1 = randi() % 10000000000
	if(number1 < 38507400):
		direction = random_directionVector()
		var pos = realPositionCentered(get_pos())
		set_pos(pos)
	if(is_colliding()):
		print(\"start is_collision:\")
		print(\"%s\" % get_pos())
		var travel = get_travel()
		var x = travel.x
		var y = travel.y
		var place = Vector2()
		if(x != 0):
			place.y = get_pos().y
			place.x = get_pos().x
			step = (int (place.x / 32))
			if(x > 0):
				place.x = 32 * step + 16
				set_pos(place)
				direction.y = -1
			else:
				place.x = 32 * (step+1) - 16
				set_pos(place)
				direction.y = 1
			direction.x = 0
		else:
			place.x = get_pos().x
			place.y = get_pos().y
			step = (int (place.y / 32))
			if(y > 0):
				place.y = 32 * step + 16
				set_pos(place)
				direction.x = 1
			else:
				place.y = 32 * (step+1) - 16
				set_pos(place)
				direction.x = -1
			direction.y = 0
	#velocity.x = lerp(velocity.x, speed * directionX, smoothness)
	#velocity.y = lerp(velocity.y, speed * directionY, smoothness)
	velocity.x = speed * direction.x;
	velocity.y = speed * direction.y;
	var motion = velocity * delta
	move(motion)
	
func random_direction():
	var number = randi() % 2
	if(number == 0):
		return -1
	else:
		return 1
	
func random_directionVector():
	var direction = Vector2()
	var number = randi() % 2
	if(number == 0):
		direction.y = 0
		direction.x = random_direction()
	else:
		direction.x = 0
		direction.y = random_direction()
	return direction

func randomEpsilon():
	var value = randi() % 100
	return value/1000

func _abs(var1):
	if(var1 >= 0):
		return var1
	else:
		return (-1)*var1
		
func setBackPosition(pos, relPos):
	var step = (int (pos / 32))
	if(relPos > 0):
		pos = 32 * step + 16
	else:
		pos = 32 * (step+1) - 16
	return pos
	
func realPosition(var1):
	var1.x = (int (var1.x / 32 )) * 32
	var1.y = (int (var1.y / 32 )) * 32
	return var1
	
func realPositionCentered(var1):
	var1.x = (int (var1.x / 32 )) * 32 + 16
	var1.y = (int (var1.y / 32 )) * 32 + 16
	return var1 "

[sub_resource type="RectangleShape2D" id=3]

custom_solver_bias = 0.0
extents = Vector2( 10, 10 )

[node name="Goblin4" type="KinematicBody2D"]

input/pickable = false
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 1.10681, 0, 0, 1.25316, 1.44279, 0.203495 )
shapes/0/trigger = false
collision/layers = 1
collision/mask = 1
collision/margin = 0.08
script/script = SubResource( 2 )
damage = 60
velocity = Vector2( 0, 0 )
speed = 80
direction = Vector2( 0, 0 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

transform/pos = Vector2( 1.44279, 0.203495 )
transform/scale = Vector2( 1.10681, 1.25316 )
shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="Sprite" type="Sprite" parent="."]

transform/pos = Vector2( 1.42696, 0 )
texture = ExtResource( 1 )

[node name="Area2D" type="Area2D" parent="."]

transform/pos = Vector2( 1.08605, 0.353117 )
transform/scale = Vector2( 0.222963, 0.386469 )
input/pickable = true
shapes/0/shape = SubResource( 3 )
shapes/0/transform = Matrix32( 6.72819, 0, 0, 3.92899, 2.13331, -1.31023 )
shapes/0/trigger = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="CollisionShape2D1" type="CollisionShape2D" parent="Area2D"]

transform/pos = Vector2( 2.13331, -1.31023 )
transform/scale = Vector2( 6.72819, 3.92899 )
shape = SubResource( 3 )
trigger = true
_update_shape_index = 0

[connection signal="body_enter" from="Area2D" to="." method="_on_Area2D_body_enter"]


