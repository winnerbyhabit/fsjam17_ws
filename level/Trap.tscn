[gd_scene load_steps=4 format=1]

[ext_resource path="res://assets/trap.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]

script/source = "extends Sprite

export(int) var damage #damage to hero
export(int) var costs #mana costs


var status = \"none\"
var tsize=Vector2()
var offset=Vector2()
var mpos=Vector2()

func _ready():
	tsize=get_texture().get_size()
	set_process_input(true)
	set_process(true)


func _process(delta):
	if status == \"dragging\":
		set_global_pos(mpos + offset)


func _input(ev):
	if ev.type == InputEvent.MOUSE_BUTTON and ev.button_index == BUTTON_LEFT and ev.is_pressed() and status != \"dragging\":
		var evpos=ev.global_pos
		var gpos=get_global_pos()
		var spriterect
		if is_centered():
			spriterect=Rect2(gpos.x-tsize.x/2, gpos.y-tsize.y/2, tsize.x, tsize.y)
		else:
			spriterect=Rect2(gpos.x, gpos.y, tsize.x, tsize.y)
		if spriterect.has_point(evpos):
			status=\"clicked\"
			offset=gpos-evpos
	#	mpos=ev.global_pos
	if status==\"clicked\" and ev.type == InputEvent.MOUSE_MOTION:
		status=\"dragging\"
	#	mpos=ev.global_pos
	if status==\"dragging\" and ev.type == InputEvent.MOUSE_BUTTON and ev.button_index == BUTTON_LEFT:
		if not ev.is_pressed():
			status=\"released\"
			mpos=ev.global_pos






func _on_Area2D_body_enter( body ):
	print(\"damage\")
	if(body.is_in_group(\"hero\")):
		body.getDamage(damage)
		queue_free()
	
	pass # replace with function body
"

[sub_resource type="CircleShape2D" id=2]

custom_solver_bias = 0.0
radius = 10.0

[node name="Trap" type="Sprite" groups=[
"Trap",
]]

texture = ExtResource( 1 )
script/script = SubResource( 1 )
damage = null
costs = null

[node name="Area2D" type="Area2D" parent="."]

input/pickable = true
shapes/0/shape = SubResource( 2 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D" groups=[
"Trap",
]]

shape = SubResource( 2 )
trigger = false
_update_shape_index = 0

[connection signal="body_enter" from="Area2D" to="." method="_on_Area2D_body_enter"]


